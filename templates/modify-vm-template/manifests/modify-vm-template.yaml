---
apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  annotations:
    task.kubevirt.io/associatedServiceAccount: {{ sa_name }}
    templateName.params.task.kubevirt.io/kind: {{ task_param_types.template_kind }}
    templateName.params.task.kubevirt.io/apiVersion: {{ task_param_types.template_version }}
    templateNamespace.params.task.kubevirt.io/kind: {{ task_param_types.namespace }}
    cpuSockets.params.task.kubevirt.io/type: {{ task_param_types.number }}
    cpuCores.params.task.kubevirt.io/type: {{ task_param_types.number }}
    cpuThreads.params.task.kubevirt.io/type: {{ task_param_types.number }}
    memory.params.task.kubevirt.io/type: {{ task_param_types.memory }}
  labels:
    task.kubevirt.io/type: {{ task_name }}
    task.kubevirt.io/category: {{ task_category }}
  name: {{ task_name }}
spec:
  params:
    - name: templateName
      description: Name of an OpenShift template.
      type: string
    - name: templateNamespace
      description: Namespace of an source OpenShift template. (defaults to active namespace)
      type: string
    - name: cpuSockets
      description: Number of CPU sockets
      type: string
    - name: cpuCores
      description: Number of CPU cores
      type: string
    - name: cpuThreads
      description: Number of CPU threads
      type: string
    - name: memory
      description: Number of memory vm can use
      type: string
    - description: Template labels. If template contains same label, it will be replaced. Each param should have KEY:VAL format. Eg ["key:value", "key:value"].
      name: templateLabels
      type: array
      default: []
    - description: Template Annotations. If template contains same annotation, it will be replaced. Each param should have KEY:VAL format. Eg ["key:value", "key:value"]
      name: templateAnnotations
      type: array
      default: []
    - description: VM labels. If VM contains same label, it will be replaced. Each param should have KEY:VAL format. Eg ["key:value", "key:value"].
      name: vmLabels
      type: array
      default: []
    - description: VM annotations. If VM contains same annotation, it will be replaced. Each param should have KEY:VAL format. Eg ["key:value", "key:value"].
      name: vmAnnotations
      type: array
      default: []
    - description: 'VM disks in json format, replace vm disk if same name, otherwise new disk is appended. Eg [{"name": "test", "cdrom": {"bus": "sata"}}, {"name": "disk2"}]'
      name: disks
      type: array
      default: []
    - description: 'VM volumes in json format, replace vm volume if same name, otherwise new volume is appended. Eg [{"name": "virtiocontainerdisk", "containerDisk": {"image": "kubevirt/virtio-container-disk"}}]'
      name: volumes
      type: array
      default: []

  results:
    - name: name
      description: The name of a template that was updated.
    - name: namespace
      description: The namespace of a template that was updated.
  steps:
    - name: modifyvmtemplate
      image: "{{ main_image }}:{{ version }}"
      command:
        - modify-vm-template
      args:
        - "--output=yaml"
        - "--template-labels"
        - $(params.templateLabels)
        - "--template-annotations"
        - $(params.templateAnnotations)
        - "--vm-labels"
        - $(params.vmLabels)
        - "--vm-annotations"
        - $(params.vmAnnotations)
        - "--disks"
        - $(params.disks)
        - "--volumes"
        - $(params.volumes)
      env:
        - name: TEMPLATE_NAME
          value: $(params.templateName)
        - name: TEMPLATE_NAMESPACE
          value: $(params.templateNamespace)
        - name: CPU_SOCKETS
          value: $(params.cpuSockets)
        - name: CPU_CORES
          value: $(params.cpuCores)
        - name: CPU_THREADS
          value: $(params.cpuThreads)
        - name: MEMORY
          value: $(params.memory)
